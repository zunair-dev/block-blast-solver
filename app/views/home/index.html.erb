<div class="w-full flex flex-col items-center">
  <div class="flex items-center w-full justify-between mb-8">
    <div class="flex items-center gap-2">
      <img src="/logo.png" alt="Block Solver Logo" class="h-10 w-10" />
      <span class="font-bold text-xl">Smart Block Solver</span>
    </div>
    <div class="flex gap-8">
      <span id="screenshot-tab" class="font-semibold border-b-4 border-purple-400 pb-2 cursor-pointer">Screenshot</span>
      <span id="fill-manually-tab" class="font-semibold text-gray-400 cursor-pointer">Fill Manually</span>
    </div>
    <div class="flex gap-2">
      <%# <img src="/appstore.svg" alt="App Store" class="h-10" /> %>
      <%# <img src="/googleplay.svg" alt="Google Play" class="h-10" /> %>
    </div>
  </div>

  <h1 class="text-5xl font-bold text-purple-700 mb-2">Smart Block Solver Online</h1>
  <p class="text-lg text-gray-600 mb-8">Get Block high score solution by taking screenshots</p>

  <div class="w-full flex flex-col items-center">
    <div id="screenshot-entry" class="bg-white rounded-2xl shadow-lg p-10 flex gap-8 w-full max-w-4xl justify-center">
      <div
        data-controller="drop-zone"
        data-drop-zone-target="zone"
        class="flex flex-col items-center justify-center border-2 border-dashed border-gray-300 rounded-xl w-96 h-120 bg-gray-50 cursor-pointer transition-all"
      >
        <input type="file" accept="image/*" class="hidden" data-drop-zone-target="input" />
        <div data-drop-zone-target="prompt" class="flex flex-col items-center">
          <span class="text-4xl mb-2">üì∑‚úÇÔ∏è</span>
          <p class="text-gray-500 mb-4 text-center">Click to select or drag and drop<br>PNG, JPG, GIF, WEBP...</p>
        </div>
        <img data-drop-zone-target="preview" class="hidden rounded-lg max-h-40 mb-2" alt="Preview" />
      </div>
      <div class="flex flex-col items-center justify-center w-64">
        <span class="font-bold text-lg mb-2">Example Image</span>
        <img src="/example-block.jpg" alt="Example Block Screenshot" class="rounded-lg border h-80 border-gray-200 mb-2" />
        <a href="#" class="text-purple-600 underline text-sm mb-4">Show example</a>
        <span class="text-gray-400 font-semibold">OR</span>
        <button id="fill-manually-btn" class="bg-purple-500 hover:bg-purple-600 text-white px-6 py-3 rounded-lg font-bold mt-4">
          Fill Manually
        </button>
      </div>
    </div>

    <div id="manual-entry" data-controller="manual" class="bg-white rounded-2xl shadow-lg p-10 w-full max-w-4xl justify-center hidden">
      <div class="flex w-full max-w-6xl gap-8">
        <!-- Initial Grid -->
        <div class="flex-1 bg-white rounded-2xl shadow-lg p-8 flex flex-col items-center">
          <h2 class="text-2xl font-bold mb-6">Fill the initial grid</h2>
          <div id="main-grid" class="grid grid-cols-8 gap-1">
            <% 8.times do |row| %>
              <% 8.times do |col| %>
                <div
                  class="w-8 h-8 bg-[#f2f4ff] border border-[#e5e9ff] rounded cursor-pointer"
                  data-action="mousedown->manual#handleMouseDown mouseover->manual#handleMouseMove mouseup->manual#handleMouseUp"
                  data-row="<%= row %>"
                  data-col="<%= col %>"
                ></div>
              <% end %>
            <% end %>
          </div>
        </div>
        <!-- Figures -->
        <div class="flex-1 bg-white rounded-2xl shadow-lg p-8 flex flex-col items-center">
          <h2 class="text-2xl font-bold mb-6">Fill the 3 figures</h2>
          <div class="flex gap-6">
            <% 3.times do |fig| %>
              <div class="flex flex-col items-center">
                <span class="mb-2 text-gray-500 font-semibold">Figures <%= fig+1 %></span>
                <div class="grid grid-cols-5 gap-1">
                  <% 5.times do |row| %>
                    <% 5.times do |col| %>
                      <div
                        class="w-5 h-5 bg-[#f2f4ff] border border-[#e5e9ff] rounded cursor-pointer"
                        data-action="mousedown->manual#handleMouseDown mouseover->manual#handleMouseMove mouseup->manual#handleMouseUp"
                        data-figure="<%= fig %>"
                        data-row="<%= row %>"
                        data-col="<%= col %>"
                      ></div>
                    <% end %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
      <!-- Buttons -->
      <div class="flex gap-6 mt-10 justify-center">
        <button class="bg-white text-gray-700 font-bold px-8 py-3 rounded-lg shadow" data-action="click->manual#clearAll">Clear</button>
        <button class="bg-purple-500 hover:bg-purple-600 text-white font-bold px-16 py-3 rounded-lg shadow" data-action="click->manual#solve">Solve</button>
      </div>
    </div>
  </div>

  <!-- Next Moves Card -->
  <div id="next-moves-card" class="w-full flex flex-col items-center mt-12 hidden">
    <h2 class="text-3xl font-bold mb-6">Placement Steps</h2>
    <div class="flex gap-8 justify-center">
      <% 3.times do |step| %>
        <div class="bg-white rounded-2xl shadow-lg p-6 flex flex-col items-center min-w-[280px]">
          <div class="step-indicator"><%= step + 1 %></div>
          <span class="font-bold text-xl mb-2">Step <%= step + 1 %></span>
          <span class="text-gray-500 mb-4">Completed lines: <span id="completed-lines-<%= step %>">0</span></span>
          <div class="grid grid-cols-8 gap-1 mb-2" id="step-grid-<%= step %>">
            <% 8.times do |row| %>
              <% 8.times do |col| %>
                <div class="w-7 h-7 bg-[#f2f4ff] border border-[#e5e9ff] rounded"></div>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <!-- How to Use Block Blast Solver -->
  <div class="w-full max-w-4xl bg-white rounded-2xl shadow-lg p-10 mt-12">
    <h2 class="text-3xl font-bold text-purple-700 mb-6">How to Use Block Blast Solver?</h2>
    
    <p class="text-lg mb-4">Block Blast Solver Online is a free tool that helps you find the best solution for block puzzles.</p>
    
    <div class="mb-4">
      <h3 class="text-xl font-bold mb-2">Screenshot the board:</h3>
      <p>Capture the game board from Block Blast or similar puzzle games.</p>
    </div>
    
    <div class="mb-4">
      <h3 class="text-xl font-bold mb-2">Upload and solve:</h3>
      <p>Use the screenshot solver to upload the image or manually recreate the blocks.</p>
    </div>
    
    <div class="mb-4">
      <h3 class="text-xl font-bold mb-2">Solve and play:</h3>
      <p>Follow the solver's analysis to achieve the best results in the game.</p>
    </div>
    
    <h2 class="text-3xl font-bold text-purple-700 mt-8 mb-6">How does the Block Blast game work?</h2>
    
    <p class="text-lg mb-6">
      Block Blast is a puzzle game where you place tile pieces with various block shapes to fill up the 
      grid. Grid management and pattern recognition are challenging due to their block blast 
      strategic movement of blocks. It is key, especially as the difficulty increases with more complex 
      shapes. The game adds new puzzle levels to go from carefully to achieve high scores.
    </p>
    
    <h2 class="text-3xl font-bold text-purple-700 mt-8 mb-6">How to get a really high score in Block Blast?</h2>
    
    <p class="text-lg mb-6">
      To receive a high score in Block Blast, players must understand the scoring system and adopt 
      effective strategies. Scores are calculated based on clearing full rows and columns, with more 
      points awarded for multiple clears in one move. Focus on creating opportunities for chain 
      reactions and plan ahead to make your score consistently efficient and manageable in scope, 
      keeping the entire span clean. The ability to block placement, while considering your career 
      throughout helps maintain good scores. Successful gameplay requires focused attention and 
      careful planning for those looking to enhance their performance using Block Blast calculator.
    </p>
    
    <div class="flex items-center justify-center mt-8 p-4 bg-purple-50 rounded-xl">
      <div class="mr-4">
        <p class="text-lg font-bold text-purple-700">Consider trying the <span class="text-orange-500">Block Blast Solver APP</span> to optimize your strategies further?</p>
      </div>
      <div>
        <img src="/app-icon.png" alt="Block Blast Solver App" class="h-12 w-12" />
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const btn = document.getElementById("fill-manually-btn");
    const screenshotTab = document.getElementById("screenshot-tab");
    const manualTab = document.getElementById("fill-manually-tab");
    const manual = document.getElementById("manual-entry");
    const screenshotEntry = document.getElementById("screenshot-entry");
    const nextMovesCard = document.getElementById("next-moves-card");
    
    function showManualEntry() {
      manual.classList.remove("hidden");
      screenshotEntry.classList.add("hidden");
      manualTab.classList.add("border-b-4", "border-purple-400", "pb-2");
      manualTab.classList.remove("text-gray-400");
      screenshotTab.classList.remove("border-b-4", "border-purple-400", "pb-2");
      screenshotTab.classList.add("text-gray-400");
      
      // Hide placement steps when switching to screenshot tab
      nextMovesCard.classList.add("hidden");
    }

    function showScreenshotEntry() {
      manual.classList.add("hidden");
      screenshotEntry.classList.remove("hidden");
      screenshotTab.classList.add("border-b-4", "border-purple-400", "pb-2");
      screenshotTab.classList.remove("text-gray-400");
      manualTab.classList.remove("border-b-4", "border-purple-400", "pb-2");
      manualTab.classList.add("text-gray-400");
      
      // Hide placement steps when switching to screenshot tab
      nextMovesCard.classList.add("hidden");
    }

    if (btn && manualTab && screenshotTab && manual) {
      btn.addEventListener("click", showManualEntry);
      manualTab.addEventListener("click", showManualEntry);
      screenshotTab.addEventListener("click", showScreenshotEntry);
    }
    
    // Add event listener to the solve button
    const solveButton = document.querySelector("[data-action='click->manual#solve']");
    if (solveButton) {
      solveButton.addEventListener("click", function() {
        // Show placement steps when solve is clicked
        nextMovesCard.classList.remove("hidden");
        
        // Scroll to the placement steps
        setTimeout(() => {
          nextMovesCard.scrollIntoView({ behavior: "smooth" });
        }, 100);
      });
    }

    // // Example mock data for 3 steps
    // const steps = [
    //   {
    //     grid: [
    //       // 8x8 grid, 0=empty, 1=blue, 2=orange
    //       [2,2,0,0,0,0,0,0],
    //       [2,2,0,0,0,0,0,0],
    //       [0,0,1,0,0,0,0,0],
    //       [0,0,1,0,0,0,0,0],
    //       [0,0,1,0,0,0,0,0],
    //       [0,0,1,0,0,0,0,0],
    //       [0,0,0,0,0,0,0,0],
    //       [0,0,0,0,0,0,0,0],
    //     ],
    //     completedLines: 0
    //   },
    //   {
    //     grid: [
    //       [1,1,1,1,0,0,0,0],
    //       [1,1,1,1,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,0,0,0,0,0,0],
    //       [0,0,0,0,0,0,0,0],
    //     ],
    //     completedLines: 0
    //   },
    //   {
    //     grid: [
    //       [1,1,1,1,0,0,0,0],
    //       [1,1,1,1,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,2,2,0,0,0,0],
    //       [0,0,0,0,0,0,0,0],
    //       [2,2,2,2,2,2,2,2], // completed line
    //     ],
    //     completedLines: 1,
    //     completedRows: [7] // highlight row 7
    //   }
    // ];

    // steps.forEach((step, idx) => {
    //   const gridDiv = document.getElementById(`step-grid-${idx}`);
    //   const completedLinesSpan = document.getElementById(`completed-lines-${idx}`);
    //   completedLinesSpan.textContent = step.completedLines;

    //   // Fill grid
    //   Array.from(gridDiv.children).forEach((cell, i) => {
    //     const row = Math.floor(i / 8);
    //     const col = i % 8;
    //     cell.classList.remove("block-blue", "block-orange", "completed-line");
    //     if (step.grid[row][col] === 1) cell.classList.add("block-blue");
    //     if (step.grid[row][col] === 2) cell.classList.add("block-orange");
    //     // Highlight completed row
    //     if (step.completedRows && step.completedRows.includes(row)) {
    //       cell.classList.add("completed-line");
    //     }
    //   });
    // });
  });
</script>

<style>
.completed-line {
  border: 3px solid #000 !important;
  box-sizing: border-box;
  animation: pulse-highlight 0.5s ease-in-out;
}

@keyframes pulse-highlight {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.block-blue {
  background: #6366f1;
  border-color: #4f46e5;
}

.block-orange {
  background: #f59e42;
  border-color: #ea580c;
}

/* Enhanced step cards */
#next-moves-card .bg-white {
  transition: transform 0.2s ease;
}

#next-moves-card .bg-white:hover {
  transform: translateY(-2px);
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Grid cells with better borders */
.grid div {
  transition: all 0.1s ease;
}

.grid div:hover {
  transform: scale(1.1);
}

/* Step indicators */
.step-indicator {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  margin: 0 auto 10px;
}
</style>
